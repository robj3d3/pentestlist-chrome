import {useEffect, useState} from "react";
import "./App.css";
import {ContentItemType} from "./types";

import {
  Avatar,
  Box,
  Button,
  Divider,
  HStack,
  Image,
  Link,
  Spinner,
  Tab,
  TabList,
  Tabs,
  Text,
  VStack,
} from "@chakra-ui/react";
import {LuArrowUpRightSquare} from "react-icons/lu";
import {FaBookOpen, FaVideo, FaMicrophone} from "react-icons/fa6";

export function ContentPanel() {
  const [tabIndex, setTabIndex] = useState(0);
  const [content, setContent] = useState<ContentItemType[]>([]);
  const [isLoading, setIsLoading] = useState(false);

  const handleSelect = async (index: number) => {
    setTabIndex(index);
    setIsLoading(true);
    try {
      const response = await fetch(
        `https://pentestlist.com/api/content?page=1&type=${index === 0 ? "" : index === 1 ? "WATCH" : index === 2 ? "READ" : "LISTEN"}`,
      );
      if (!response.ok) throw new Error("Network response was not ok");
      const contentData = await response.json();
      setContent(contentData.flat(1));
    } catch (error) {
      console.error("Error:", error);
      setContent([]);
    } finally {
      setIsLoading(false);
    }
  };

  const openUrl = (url: string) => {
    window.open(url, "_blank", "noopener,noreferrer");
  };

  useEffect(() => {
    handleSelect(0);
  }, []);

  return (
    <>
      <Box display="flex" flexDir="column" top={0} pos="sticky" zIndex={99}>
        <HStack width="full" bg="gray.50" pt={2} pb={3} px={2} gap={3}>
          <Tabs
            variant={"unstyled"}
            onChange={(index) => handleSelect(index)}
            isLazy
            width="full"
            flexWrap={"wrap"}
          >
            <TabList
              bgColor={"gray.50"}
              borderRadius={"lg"}
              w="full"
              display="flex"
              justifyContent="space-between"
              top={0}
              pos="sticky"
              zIndex={99}
            >
              <Tab px={2} minW="60px" _hover={{bg: "gray.100"}} rounded="md">
                <Text fontWeight={tabIndex === 0 ? "bold" : "medium"}>ALL</Text>
              </Tab>
              <Tab px={2} minW="60px" _hover={{bg: "gray.100"}} rounded="md">
                <FaVideo color={tabIndex === 1 ? "#30313D" : "#87909C"} />
              </Tab>
              <Tab px={2} minW="60px" _hover={{bg: "gray.100"}} rounded="md">
                <FaBookOpen color={tabIndex === 2 ? "#30313D" : "#87909C"} />
              </Tab>
              <Tab px={2} minW="60px" _hover={{bg: "gray.100"}} rounded="md">
                <FaMicrophone color={tabIndex === 3 ? "#30313D" : "#87909C"} />
              </Tab>
            </TabList>
          </Tabs>
          <Button
            minW="120px"
            px={4}
            fontWeight={"semibold"}
            bg="#006BB3"
            color="white"
            transition="all 400ms ease"
            _hover={{
              bg: "#005c99",
            }}
            rightIcon={<LuArrowUpRightSquare color="white" size={16} />}
            onClick={() => openUrl("https://pentestlist.com")}
          >
            Discover
          </Button>
        </HStack>
        <Divider
          w="full"
          color="black"
          borderWidth="1px"
          opacity={0.8}
          mb={2}
        />
      </Box>
      <Box
        display="flex"
        flexDir="column"
        w="full"
        minH="86vh"
        overflowY="auto"
        px={2}
        pb={content && content.length ? 16 : 0}
      >
        {content && content.length > 0 ? (
          content.map((content, index) => (
            <Box
              key={`content-item-${index}`}
              display="flex"
              flexDir="row"
              alignItems="center"
              onClick={() => openUrl(content.url || "")}
              w="full"
              p={2}
              my={1}
              bg="white"
              borderColor="gray.300"
              borderWidth="1px"
              rounded="md"
              _hover={{
                bg: "gray.100",
                cursor: "pointer",
              }}
            >
              <Avatar
                borderColor="black"
                bg="white"
                borderWidth={2}
                rounded="full"
                size="md"
                src={content.ogImageUrl}
                name={content.name}
              />
              <VStack alignItems="start" gap={0.5} pl={2}>
                <HStack display="flex">
                   
                   {/* <Text w="12px" ml={-2} mt={-1}>
                    {content.contentType === "WATCH" ? (
                      <FaVideo size={12} color={"#30313D"} display="inline"/>
                    ) : content.contentType === "READ" ? (
                      <FaBookOpen size={12} color={"#30313D"} display="inline"/>
                    ) : content.contentType === "LISTEN" ? (
                      <FaMicrophone size={12} color={"#30313D"} display="inline" />
                    ) : (
                      ""
                    )}
                     
                    </Text> */}
                  <Text fontWeight="bold" fontSize="sm" display="inline" >
                  {content.name}
                  </Text>
                </HStack>

                <Text noOfLines={2} textOverflow={"ellipsis"}>
                  <b>{content.contentType}</b>: {content.description}
                </Text>
              </VStack>
            </Box>
          ))
        ) : (
          <Box
            mt={-20}
            display="flex"
            flexDir="column"
            w="full"
            minH="100vh"
            alignItems="center"
            justifyContent="center"
            gap={4}
          >
            {isLoading && (
              <Spinner color="gray.800" size="xl" borderWidth="3px" mb={2} />
            )}
            {!isLoading && <Image w="120px" src="images/empty-content.webp" />}
            <Text
              textAlign="center"
              maxW="200px"
              fontWeight="bold"
              fontSize="xl"
            >
              Search the latest top-rated content
            </Text>
            <Text textAlign="center" fontSize="sm">
              Powered by{" "}
              <Link href="https://pentestlist.com" target="_blank">
                <b>PentestList.com</b>
              </Link>
            </Text>
          </Box>
        )}
      </Box>
    </>
  );
}
